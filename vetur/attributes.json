{
  "v-alert/tag": {
    "type": "string",
    "description": "HTML tag used to wrap the component."
  },
  "VAlert/tag": {
    "type": "string",
    "description": "HTML tag used to wrap the component."
  },
  "v-alert/v-model": {
    "type": "boolean|number",
    "description": "Determines whether the alert is visible. Also binds with `v-model`."
  },
  "VAlert/v-model": {
    "type": "boolean|number",
    "description": "Determines whether the alert is visible. Also binds with `v-model`."
  },
  "v-alert/dismissible": {
    "type": "boolean",
    "description": "Allows a user to dismiss this alert."
  },
  "VAlert/dismissible": {
    "type": "boolean",
    "description": "Allows a user to dismiss this alert."
  },
  "v-alert/dismissLabel": {
    "type": "string|boolean",
    "description": "Aria-label that is not visibly, but screen readers will read for the dismiss button."
  },
  "VAlert/dismissLabel": {
    "type": "string|boolean",
    "description": "Aria-label that is not visibly, but screen readers will read for the dismiss button."
  },
  "v-alert/transition": {
    "type": "string",
    "description": "The transition name if you want to add one."
  },
  "VAlert/transition": {
    "type": "string",
    "description": "The transition name if you want to add one."
  },
  "v-alert/classes": {
    "type": "object"
  },
  "VAlert/classes": {
    "type": "object"
  },
  "v-async/await": {
    "type": "Promise|function",
    "description": "A promise or function that returns a promise."
  },
  "VAsync/await": {
    "type": "Promise|function",
    "description": "A promise or function that returns a promise."
  },
  "v-async/default": {
    "type": "undefined",
    "description": "The default value to provide for the `results`.\nUseful if the promise resolve value is undefined."
  },
  "VAsync/default": {
    "type": "undefined",
    "description": "The default value to provide for the `results`.\nUseful if the promise resolve value is undefined."
  },
  "v-breadcrumbs/breadcrumbs": {
    "type": "array"
  },
  "VBreadcrumbs/breadcrumbs": {
    "type": "array"
  },
  "v-btn/action": {
    "type": "string"
  },
  "VBtn/action": {
    "type": "string"
  },
  "v-btn/data": {
    "type": "object"
  },
  "VBtn/data": {
    "type": "object"
  },
  "v-date/v-model": {
    "type": "date|string"
  },
  "VDate/v-model": {
    "type": "date|string"
  },
  "v-date/min": {
    "type": "date|string"
  },
  "VDate/min": {
    "type": "date|string"
  },
  "v-date/max": {
    "type": "date|string"
  },
  "VDate/max": {
    "type": "date|string"
  },
  "v-date/id": {
    "type": "string"
  },
  "VDate/id": {
    "type": "string"
  },
  "v-date/daysOfWeek": {
    "type": "object"
  },
  "VDate/daysOfWeek": {
    "type": "object"
  },
  "v-date/monthLabels": {
    "type": "array"
  },
  "VDate/monthLabels": {
    "type": "array"
  },
  "v-date/buttonLabels": {
    "type": "object"
  },
  "VDate/buttonLabels": {
    "type": "object"
  },
  "v-date/classes": {
    "type": "object"
  },
  "VDate/classes": {
    "type": "object"
  },
  "v-dialog/v-model": {
    "type": "boolean"
  },
  "VDialog/v-model": {
    "type": "boolean"
  },
  "v-dialog/tag": {
    "type": "string",
    "description": "HTML component for the dialog content."
  },
  "VDialog/tag": {
    "type": "string",
    "description": "HTML component for the dialog content."
  },
  "v-dialog/dismissible": {
    "type": "boolean",
    "description": "Flag to enable/prevent the dialog from being closed."
  },
  "VDialog/dismissible": {
    "type": "boolean",
    "description": "Flag to enable/prevent the dialog from being closed."
  },
  "v-dialog/width": {
    "type": "string",
    "description": "CSS width to set the dialog to."
  },
  "VDialog/width": {
    "type": "string",
    "description": "CSS width to set the dialog to."
  },
  "v-dialog/inlineSize": {
    "type": "string",
    "description": "CSS width to set the dialog to."
  },
  "VDialog/inlineSize": {
    "type": "string",
    "description": "CSS width to set the dialog to."
  },
  "v-dialog/maxWidth": {
    "type": "string",
    "description": "CSS max-width to set the dialog to."
  },
  "VDialog/maxWidth": {
    "type": "string",
    "description": "CSS max-width to set the dialog to."
  },
  "v-dialog/maxInlineSize": {
    "type": "string",
    "description": "CSS max-width to set the dialog to."
  },
  "VDialog/maxInlineSize": {
    "type": "string",
    "description": "CSS max-width to set the dialog to."
  },
  "v-dialog/noScroll": {
    "type": "boolean",
    "description": "Prevents the page from being scrolled while the dialog is open."
  },
  "VDialog/noScroll": {
    "type": "boolean",
    "description": "Prevents the page from being scrolled while the dialog is open."
  },
  "v-dialog/transition": {
    "type": "string",
    "description": "Transition name to apply to the dialog."
  },
  "VDialog/transition": {
    "type": "string",
    "description": "Transition name to apply to the dialog."
  },
  "v-dialog/bgTransition": {
    "type": "string",
    "description": "Transition name to apply to the background."
  },
  "VDialog/bgTransition": {
    "type": "string",
    "description": "Transition name to apply to the background."
  },
  "v-dialog/contentTransition": {
    "type": "string",
    "description": "Transition name to apply to the background."
  },
  "VDialog/contentTransition": {
    "type": "string",
    "description": "Transition name to apply to the background."
  },
  "v-dialog/classes": {
    "type": "object"
  },
  "VDialog/classes": {
    "type": "object"
  },
  "v-drawer/v-model": {
    "type": "boolean"
  },
  "VDrawer/v-model": {
    "type": "boolean"
  },
  "v-drawer/tag": {
    "type": "string"
  },
  "VDrawer/tag": {
    "type": "string"
  },
  "v-drawer/right": {
    "type": "boolean",
    "description": "Flag to place the drawer on the right side."
  },
  "VDrawer/right": {
    "type": "boolean",
    "description": "Flag to place the drawer on the right side."
  },
  "v-drawer/width": {
    "type": "string",
    "description": "CSS width value."
  },
  "VDrawer/width": {
    "type": "string",
    "description": "CSS width value."
  },
  "v-drawer/inlineSize": {
    "type": "string",
    "description": "CSS width to set the dialog to."
  },
  "VDrawer/inlineSize": {
    "type": "string",
    "description": "CSS width to set the dialog to."
  },
  "v-drawer/maxWidth": {
    "type": "string",
    "description": "CSS max-width value."
  },
  "VDrawer/maxWidth": {
    "type": "string",
    "description": "CSS max-width value."
  },
  "v-drawer/maxInlineSize": {
    "type": "string",
    "description": "CSS max-width to set the dialog to."
  },
  "VDrawer/maxInlineSize": {
    "type": "string",
    "description": "CSS max-width to set the dialog to."
  },
  "v-drawer/noScroll": {
    "type": "boolean",
    "description": "Disable page scrolling when drawer is open."
  },
  "VDrawer/noScroll": {
    "type": "boolean",
    "description": "Disable page scrolling when drawer is open."
  },
  "v-drawer/bgTransition": {
    "type": "string",
    "description": "Vue transition name for the background."
  },
  "VDrawer/bgTransition": {
    "type": "string",
    "description": "Vue transition name for the background."
  },
  "v-drawer/text": {
    "type": "string",
    "description": "The toggle button text."
  },
  "VDrawer/text": {
    "type": "string",
    "description": "The toggle button text."
  },
  "v-drawer/position": {
    "type": "string",
    "description": "Where the content should be placed in relation to the button.\n\nOptions: 'bottom', 'top'",
    "options": [
      "top",
      "bottom"
    ]
  },
  "VDrawer/position": {
    "type": "string",
    "description": "Where the content should be placed in relation to the button.\n\nOptions: 'bottom', 'top'",
    "options": [
      "top",
      "bottom"
    ]
  },
  "v-drawer/transition": {
    "type": "string",
    "description": "The transition name."
  },
  "VDrawer/transition": {
    "type": "string",
    "description": "The transition name."
  },
  "v-drawer/classes": {
    "type": "object"
  },
  "VDrawer/classes": {
    "type": "object"
  },
  "v-file/label": {
    "type": "string"
  },
  "VFile/label": {
    "type": "string"
  },
  "v-file/v-model": {
    "type": "array"
  },
  "VFile/v-model": {
    "type": "array"
  },
  "v-file/classes": {
    "type": "object"
  },
  "VFile/classes": {
    "type": "object"
  },
  "v-form/lazy": {
    "type": "boolean"
  },
  "VForm/lazy": {
    "type": "boolean"
  },
  "v-form/errors": {
    "type": "import('vue').PropOptions<Object>"
  },
  "VForm/errors": {
    "type": "import('vue').PropOptions<Object>"
  },
  "v-form/preventNavigation": {
    "type": "boolean"
  },
  "VForm/preventNavigation": {
    "type": "boolean"
  },
  "v-form/honeypot": {
    "type": "boolean|string"
  },
  "VForm/honeypot": {
    "type": "boolean|string"
  },
  "v-img/src": {
    "type": "string",
    "description": "Same as the HTML attribute"
  },
  "VImg/src": {
    "type": "string",
    "description": "Same as the HTML attribute"
  },
  "v-img/srcset": {
    "type": "string",
    "description": "Same as the HTML attribute"
  },
  "VImg/srcset": {
    "type": "string",
    "description": "Same as the HTML attribute"
  },
  "v-img/placeholder": {
    "type": "string",
    "description": "URL of the blurred placeholder image to use if you need one (ideally a very small image)."
  },
  "VImg/placeholder": {
    "type": "string",
    "description": "URL of the blurred placeholder image to use if you need one (ideally a very small image)."
  },
  "v-img/background": {
    "type": "string",
    "description": "CSS background styles for the placeholder in case you just want colors."
  },
  "VImg/background": {
    "type": "string",
    "description": "CSS background styles for the placeholder in case you just want colors."
  },
  "v-img/transitionDuration": {
    "type": "number|string"
  },
  "VImg/transitionDuration": {
    "type": "number|string"
  },
  "v-img/classes": {
    "type": "object"
  },
  "VImg/classes": {
    "type": "object"
  },
  "v-input/label": {
    "type": "string",
    "description": "Every input should have a label with the exception of `radio` which supports labels for the `options` prop."
  },
  "VInput/label": {
    "type": "string",
    "description": "Every input should have a label with the exception of `radio` which supports labels for the `options` prop."
  },
  "v-input/name": {
    "type": "string",
    "description": "Every input should have a label with the exception of `radio` which supports labels for the `options` prop."
  },
  "VInput/name": {
    "type": "string",
    "description": "Every input should have a label with the exception of `radio` which supports labels for the `options` prop."
  },
  "v-input/value": {
    "type": "string|number|boolean|array",
    "description": "The input value. Works for all inputs except type `radio`. See `options` prop."
  },
  "VInput/value": {
    "type": "string|number|boolean|array",
    "description": "The input value. Works for all inputs except type `radio`. See `options` prop."
  },
  "v-input/options": {
    "type": "array",
    "description": "An array of options used for inputs of type `radio` or type `select`"
  },
  "VInput/options": {
    "type": "array",
    "description": "An array of options used for inputs of type `radio` or type `select`"
  },
  "v-input/errors": {
    "type": "object"
  },
  "VInput/errors": {
    "type": "object"
  },
  "v-input/classes": {
    "type": "object"
  },
  "VInput/classes": {
    "type": "object"
  },
  "v-intersect/threshold": {
    "type": "number|array",
    "description": "The IntersectionObserver threshold value."
  },
  "VIntersect/threshold": {
    "type": "number|array",
    "description": "The IntersectionObserver threshold value."
  },
  "v-intersect/root": {
    "type": "string",
    "description": "The IntersectionObserver root value."
  },
  "VIntersect/root": {
    "type": "string",
    "description": "The IntersectionObserver root value."
  },
  "v-intersect/rootMargin": {
    "type": "string",
    "description": "The IntersectionObserver rootMargin value."
  },
  "VIntersect/rootMargin": {
    "type": "string",
    "description": "The IntersectionObserver rootMargin value."
  },
  "v-intersect/options": {
    "type": "object"
  },
  "VIntersect/options": {
    "type": "object"
  },
  "v-modal/v-model": {
    "type": "boolean"
  },
  "VModal/v-model": {
    "type": "boolean"
  },
  "v-modal/tag": {
    "type": "string",
    "description": "HTML component for the modal content."
  },
  "VModal/tag": {
    "type": "string",
    "description": "HTML component for the modal content."
  },
  "v-modal/dismissible": {
    "type": "boolean",
    "description": "Flag to enable/prevent the modal from being closed."
  },
  "VModal/dismissible": {
    "type": "boolean",
    "description": "Flag to enable/prevent the modal from being closed."
  },
  "v-modal/width": {
    "type": "string",
    "description": "CSS width to set the modal to."
  },
  "VModal/width": {
    "type": "string",
    "description": "CSS width to set the modal to."
  },
  "v-modal/maxWidth": {
    "type": "string",
    "description": "CSS max-width to set the modal to."
  },
  "VModal/maxWidth": {
    "type": "string",
    "description": "CSS max-width to set the modal to."
  },
  "v-modal/noScroll": {
    "type": "boolean",
    "description": "Prevents the page from being scrolled while the modal is open."
  },
  "VModal/noScroll": {
    "type": "boolean",
    "description": "Prevents the page from being scrolled while the modal is open."
  },
  "v-modal/transition": {
    "type": "string",
    "description": "Transition name to apply to the modal."
  },
  "VModal/transition": {
    "type": "string",
    "description": "Transition name to apply to the modal."
  },
  "v-modal/bgTransition": {
    "type": "string",
    "description": "Transition name to apply to the background."
  },
  "VModal/bgTransition": {
    "type": "string",
    "description": "Transition name to apply to the background."
  },
  "v-modal/classes": {
    "type": "object"
  },
  "VModal/classes": {
    "type": "object"
  },
  "v-multiselect/search": {
    "type": "string"
  },
  "VMultiselect/search": {
    "type": "string"
  },
  "v-multiselect/label": {
    "type": "string",
    "description": "Every input should have a label with the exception of `radio` which supports labels for the `options` prop."
  },
  "VMultiselect/label": {
    "type": "string",
    "description": "Every input should have a label with the exception of `radio` which supports labels for the `options` prop."
  },
  "v-multiselect/value": {
    "type": "string|number|boolean|array",
    "description": "The input value. Works for all inputs except type `radio`. See `options` prop."
  },
  "VMultiselect/value": {
    "type": "string|number|boolean|array",
    "description": "The input value. Works for all inputs except type `radio`. See `options` prop."
  },
  "v-multiselect/options": {
    "type": "array",
    "description": "An array of options used for inputs of type `radio` or type `select`"
  },
  "VMultiselect/options": {
    "type": "array",
    "description": "An array of options used for inputs of type `radio` or type `select`"
  },
  "v-multiselect/classes": {
    "type": "object"
  },
  "VMultiselect/classes": {
    "type": "object"
  },
  "v-resize/tag": {
    "type": "string"
  },
  "VResize/tag": {
    "type": "string"
  },
  "v-skip/to": {
    "type": "string"
  },
  "VSkip/to": {
    "type": "string"
  },
  "v-table/headers": {
    "type": "import('vue').PropOptions<Header[]>"
  },
  "VTable/headers": {
    "type": "import('vue').PropOptions<Header[]>"
  },
  "v-table/items": {
    "type": "import('vue').PropOptions<Object[]>"
  },
  "VTable/items": {
    "type": "import('vue').PropOptions<Object[]>"
  },
  "v-table/page": {
    "type": "number|string"
  },
  "VTable/page": {
    "type": "number|string"
  },
  "v-table/perPage": {
    "type": "number|string"
  },
  "VTable/perPage": {
    "type": "number|string"
  },
  "v-table/sortBy": {
    "type": "string"
  },
  "VTable/sortBy": {
    "type": "string"
  },
  "v-table/sortDirection": {
    "type": "import('vue').PropOptions<'ASC'|'DESC'>"
  },
  "VTable/sortDirection": {
    "type": "import('vue').PropOptions<'ASC'|'DESC'>"
  },
  "v-table/id": {
    "type": "string"
  },
  "VTable/id": {
    "type": "string"
  },
  "v-table/caption": {
    "type": "string"
  },
  "VTable/caption": {
    "type": "string"
  },
  "v-table/sortable": {
    "type": "boolean"
  },
  "VTable/sortable": {
    "type": "boolean"
  },
  "v-table/classes": {
    "type": "object"
  },
  "VTable/classes": {
    "type": "object"
  },
  "v-tabs/v-model": {
    "type": "number"
  },
  "VTabs/v-model": {
    "type": "number"
  },
  "v-tabs/label": {
    "type": "string"
  },
  "VTabs/label": {
    "type": "string"
  },
  "v-tabs/orientation": {
    "type": "string"
  },
  "VTabs/orientation": {
    "type": "string"
  },
  "v-tabs/classes": {
    "type": "object"
  },
  "VTabs/classes": {
    "type": "object"
  },
  "v-toggle/v-model": {
    "type": "boolean"
  },
  "VToggle/v-model": {
    "type": "boolean"
  },
  "v-toggle/label": {
    "type": "string"
  },
  "VToggle/label": {
    "type": "string"
  },
  "v-toggle/disabled": {
    "type": "boolean"
  },
  "VToggle/disabled": {
    "type": "boolean"
  },
  "v-toggle/classes": {
    "type": "object"
  },
  "VToggle/classes": {
    "type": "object"
  },
  "v-tooltip/tag": {
    "type": "string"
  },
  "VTooltip/tag": {
    "type": "string"
  },
  "v-tooltip/id": {
    "type": "string"
  },
  "VTooltip/id": {
    "type": "string"
  },
  "v-tooltip/focus": {
    "type": "boolean"
  },
  "VTooltip/focus": {
    "type": "boolean"
  },
  "v-tooltip/classes": {
    "type": "object"
  },
  "VTooltip/classes": {
    "type": "object"
  },
  "v-try/stopPropagation": {
    "type": "boolean"
  },
  "VTry/stopPropagation": {
    "type": "boolean"
  }
}